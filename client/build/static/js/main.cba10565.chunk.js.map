{"version":3,"sources":["components/Nav/Nav.js","components/Upload/Upload.js","components/Editor/Editor.js","components/Home.js","components/UploadImage.js","components/404NotFount.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","sectionDesktop","breakpoints","up","sectionMobile","Nav","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","color","Badge","badgeContent","aria-controls","aria-haspopup","className","AppBar","position","Toolbar","edge","Typography","variant","noWrap","UploadDialog","forwardRef","props","ref","setOpen","uploadImgURL","setuploadImgURL","uuid","setUUID","verCode","setVerCode","handleClickOpen","fetch","method","then","response","json","data","url","handleClose","useImperativeHandle","handleUploadBtn","Dialog","aria-labelledby","DialogTitle","DialogContent","dividers","value","target","rel","href","TextField","autoFocus","margin","label","type","onChange","e","fullWidth","InputProps","inputProps","max","min","DialogActions","Button","headers","cache","body","JSON","stringify","vcode","status","NotificationManager","success","msg","editor","current","addImage","fileurl","error","Editor","quil","getEditor","index","getLength","insertEmbed","formatText","setSelection","createRef","el","Component","Home","uploadRef","Container","fixed","Upload","this","startIcon","UploadImage","match","verResp","setVerResp","Grid","item","xs","acceptedFiles","filesLimit","name","capture","formData","FormData","append","document","querySelector","files","params","catch","NotFound","App","CssBaseline","path","exact","component","style","marginTop","window","location","hostname","createMuiTheme","palette","primary","amber","secondary","blue","ReactDOM","render","StrictMode","ThemeProvider","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.cba10565.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'block',\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nfunction Nav() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  \n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  \n    const handleProfileMenuOpen = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleMobileMenuClose = () => {\n      setMobileMoreAnchorEl(null);\n    };\n  \n    const handleMenuClose = () => {\n      setAnchorEl(null);\n      handleMobileMenuClose();\n    };\n  \n    const handleMobileMenuOpen = (event) => {\n      setMobileMoreAnchorEl(event.currentTarget);\n    };\n  \n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        id={menuId}\n        keepMounted\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMenuOpen}\n        onClose={handleMenuClose}\n      >\n        <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n        <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      </Menu>\n    );\n  \n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n      <Menu\n        anchorEl={mobileMoreAnchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        id={mobileMenuId}\n        keepMounted\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMobileMenuOpen}\n        onClose={handleMobileMenuClose}\n      >\n        <MenuItem>\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <MailIcon />\n            </Badge>\n          </IconButton>\n          <p>Messages</p>\n        </MenuItem>\n        <MenuItem>\n          <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n            <Badge badgeContent={11} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <p>Notifications</p>\n        </MenuItem>\n        <MenuItem onClick={handleProfileMenuOpen}>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"primary-search-account-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n          <p>Profile</p>\n        </MenuItem>\n      </Menu>\n    );\n  \n    return (\n      <div className={classes.grow}>\n        <AppBar position=\"static\" color=\"primary\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              Bharat Institute of Technology\n            </Typography>\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n                <Badge badgeContent={4} color=\"secondary\">\n                  <MailIcon />\n                </Badge>\n              </IconButton>\n              <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n                <Badge badgeContent={17} color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                onClick={handleProfileMenuOpen}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n            </div>\n            <div className={classes.sectionMobile}>\n              <IconButton\n                aria-label=\"show more\"\n                aria-controls={mobileMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMobileMenu}\n        {renderMenu}\n      </div>\n    );\n}\n\nexport default Nav;","import React, { useState, useImperativeHandle, forwardRef } from 'react';\nimport {\n\tButton,\n\tTextField,\n\tDialog,\n\tDialogActions,\n\tDialogContent,\n\tTypography,\n\tDialogTitle\n} from '@material-ui/core';\nimport QRCode from \"react-qr-code\";\n\nimport {\n\tNotificationContainer,\n\tNotificationManager\n} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\nconst UploadDialog = forwardRef((props, ref) => {\n\tconst [open, setOpen] = useState(false);\n\tconst [uploadImgURL, setuploadImgURL] = useState('');\n\tconst [uuid, setUUID] = useState('');\n\tconst [verCode, setVerCode] = useState('')\n\n\t// On dialog open, Make a request to get unique key\n\tconst handleClickOpen = () => {\n\t\tfetch(\"/upload/getId\", {\n\t\t\tmethod: 'post'\n\t\t}).then(function (response) {\n\t\t\treturn response.json();\n\t\t}).then(function (data) {\n\t\t\tsetuploadImgURL(data.url);\n\t\t\tsetUUID(data.id);\n\t\t});\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\t// Verify the verfication code with backend\n\tconst handleUploadSubmit = () => {\n\t\tfetch(\"/upload/verfiyUpload\", {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'Content-type': 'application/json'\n\t\t\t},\n\t\t\tcache: \"no-cache\",\n\t\t\tbody: JSON.stringify({\n\t\t\t\tuuid: uuid,\n\t\t\t\tvcode: verCode\n\t\t\t})\n\t\t}).then(function (response) {\n\t\t\treturn response.json();\n\t\t}).then(function (data) {\n\t\t\tif( data.status === \"suceess\" ){\n\t\t\t\tNotificationManager.success( data.msg, 'Upload');\n\n\t\t\t\t// Add image to editor\n\t\t\t\tprops.editor.current.addImage( data.fileurl )\n\t\t\t\tsetOpen(false);\n\t\t\t} else if( data.status === \"error\" ){\n\t\t\t\tNotificationManager.error('Entered wrong verification code!', 'Error', 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Set verfication code upon text field change\n\tconst handlerVerCode = (e) => {\n\t\tsetVerCode(e.target.value)\n\t}\n\n\tuseImperativeHandle(ref, () => ({\n\t\thandleUploadBtn: handleClickOpen\n\t}));\n\n\treturn (\n\t\t<div>\n\t\t\t<NotificationContainer/>\n\t\t\t<Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog\">\n\t\t\t\t<DialogTitle id=\"form-dialog\">Upload</DialogTitle>\n\t\t\t\t<DialogContent dividers>\n\t\t\t\t\t{uploadImgURL === '' ? '' :\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<QRCode value={uploadImgURL} />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\tScan QR code or goto <a target=\"_blank\" rel=\"noopener noreferrer\" href={uploadImgURL}>{uploadImgURL}</a> URL.\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tlabel=\"Verification Code\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\tvalue={verCode}\n\t\t\t\t\t\t\t\tonChange={handlerVerCode}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\tinputProps: { \n\t\t\t\t\t\t\t\t\t\tmax: 9999, min: 1000 \n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={handleUploadSubmit} color=\"secondary\" variant=\"contained\">Sumit</Button>\n\t\t\t\t\t<Button onClick={handleClose} variant=\"contained\">Cancel</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t</div>\n\t);\n});\n\nexport default UploadDialog;","import React from'react';\n\n// Quill Rich Text Editor Lib\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nclass Editor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.quil = React.createRef();\n    }\n\n    addImage = (url) => {\n        const editor = this.quil.getEditor();\n\t\tconst index = editor.getLength()\n\t\teditor.insertEmbed( index, \"image\", url, \"user\")\n\t\teditor.formatText(index, index + 1, \"width\", \"200\")\n    \teditor.setSelection(index + 1)\n    }\n\n    render() {\n        return (\n            <ReactQuill ref={(el) => { this.quil = el }} theme=\"snow\" />\n        )\n    }\n}\n\nexport default Editor;","import React from 'react';\n\n// Material UI\nimport {\n\tContainer,\n    Button\n} from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\n// Components\nimport UploadDialog from './Upload/Upload';\nimport Editor from './Editor/Editor';\n\nclass Home extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.editor = React.createRef();\n\t\tthis.uploadRef = React.createRef();\n\t}\n\n\trender(){\n\t\treturn (\n\t\t\t<Container fixed>\n\t\t\t\t<UploadDialog ref={this.uploadRef} editor={this.editor}/>\n\t\t\t\t<br />\n\t\t\t\t<Button variant=\"contained\"\n\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\tstartIcon={<CloudUploadIcon />}\n\t\t\t\t\tonClick={() => this.uploadRef.current.handleUploadBtn()}\n\t\t\t\t> Upload Image </Button>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<Editor ref={this.editor} />\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport {\n\tContainer,\n\tButton,\n\tGrid,\n\tTypography\n} from '@material-ui/core'\nimport { DropzoneArea } from 'material-ui-dropzone'\n\nfunction UploadImage( { match } ) {\n\tconst [verResp, setVerResp] = useState('')\n\n\t// Upload image to backend\n\tconst onUploadImage = () => {\n\t\tvar formData = new FormData();\n            formData.append('file', document.querySelector('#image_file').files[0]);\n\t\t\tformData.append('fileN', match.params.uuid );\n \n\t\tfetch( '/upload/img/' + match.params.uuid, {\n\t\t\tmethod: 'post',\n\t\t\tbody: formData\n\t\t}).then(function (response) {\n\t\t\treturn response.json();\n\t\t}).then(function (data) {\n\t\t\tif( data[\"status\"] === \"suceess\" ){\n\t\t\t\tsetVerResp(data[\"verficationcode\"])\n\t\t\t}\n\t\t}).catch( function(e){\n\t\t\tsetVerResp(\"Error :( \");\n\t\t});\n\t}\n\treturn (\n\t\t<Container fixed>\n\t\t\t<br/>\n\t\t\t{ verResp === '' ?\n\t\t\t<>\n\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t<DropzoneArea\n\t\t\t\t\t\tacceptedFiles={ [ 'image/*' ] }\n\t\t\t\t\t\tfilesLimit={1}\n\t\t\t\t\t\tinputProps={{\n\t\t\t\t\t\t\tname: \"file\",\n\t\t\t\t\t\t\tid: \"image_file\",\n\t\t\t\t\t\t\tcapture: true\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<br/>\n\t\t\t\t<Button color=\"secondary\" onClick={onUploadImage} variant=\"contained\" type={'submit'}>Upload</Button>\n\t\t\t</>\n\t\t\t:\n\t\t\t\t<>\n\t\t\t\t\t<Typography>Your verfication code is: {verResp}</Typography>\n\t\t\t\t</>\n\t\t\t}\n\t\t</Container>\n\t);\n}\n\nexport default UploadImage;","import React from 'react';\n\nfunction NotFound(props) {\n    return (\n      <div className=\"page-container\">\n        <h1 className=\"title\">404 Not Found</h1>\n      </div>\n    )\n}\n\nexport default NotFound","import React from 'react';\n\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute\n} from \"react-router-dom\";\n\n// Material UI\nimport { CssBaseline, Typography } from '@material-ui/core';\n\n// Components\nimport NavBar from './components/Nav/Nav'\nimport Home from './components/Home';\nimport UploadImage from './components/UploadImage';\nimport NotFound from './components/404NotFount'\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<CssBaseline />\n\t\t\t<NavBar/>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t<Route path=\"/upload/:uuid\" component={UploadImage} />\n\t\t\t\t<Route component={NotFound} />\n\t\t\t</Switch>\n\t\t\t<Typography style={{marginTop: \"220px\"}}>\n\t\t\t\tThis is not an offical site and used as Education experments. \n\t\t\t</Typography>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { amber, blue } from '@material-ui/core/colors';\nimport './global.css';\n\nconst theme = createMuiTheme({\n  palette: {\n\tprimary: amber,\n\tsecondary: blue\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}